@page "/logs"
@using UserManagement.Common.DTOs
@using UserManagement.BlazorClient.Services
@inject ILogApiService LogService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>System Logs</PageTitle>

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">
                        <i class="fas fa-list me-2"></i>
                        System Activity Logs
                    </h3>
                    <button class="btn btn-light" @onclick="RefreshLogs">
                        <i class="fas fa-refresh me-2"></i>
                        Refresh
                    </button>
                </div>
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading system logs...</p>
                        </div>
                    }
                    else if (logs == null || !logs.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-list fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No logs found</h5>
                            <p class="text-muted">No activity has been logged yet.</p>
                        </div>
                    }
                    else
                    {
                        <!-- Summary Cards -->
                        <div class="row mb-4">
                            <div class="col-md-3">
                                <div class="card bg-primary text-white">
                                    <div class="card-body text-center">
                                        <i class="fas fa-list fa-2x mb-2"></i>
                                        <h4>@logs.Count()</h4>
                                        <small>Total Logs</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-success text-white">
                                    <div class="card-body text-center">
                                        <i class="fas fa-plus fa-2x mb-2"></i>
                                        <h4>@logs.Count(l => l.Action.Equals("Created", StringComparison.OrdinalIgnoreCase))</h4>
                                        <small>Created</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-warning text-white">
                                    <div class="card-body text-center">
                                        <i class="fas fa-edit fa-2x mb-2"></i>
                                        <h4>@logs.Count(l => l.Action.Equals("Updated", StringComparison.OrdinalIgnoreCase))</h4>
                                        <small>Updated</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-info text-white">
                                    <div class="card-body text-center">
                                        <i class="fas fa-eye fa-2x mb-2"></i>
                                        <h4>@logs.Count(l => l.Action.Equals("Viewed", StringComparison.OrdinalIgnoreCase))</h4>
                                        <small>Viewed</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Logs Table -->
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Timestamp</th>
                                        <th>User</th>
                                        <th>Action</th>
                                        <th>Description</th>
                                        <th>Details</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var log in logs.OrderByDescending(l => l.Timestamp))
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-semibold">@log.Timestamp.ToString("MMM dd, yyyy")</div>
                                                <small class="text-muted">@log.Timestamp.ToString("HH:mm:ss")</small>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-small me-2">
                                                        @if (!string.IsNullOrEmpty(log.UserName))
                                                        {
                                                            @log.UserName.Split(' ').Select(n => n.FirstOrDefault()).Take(2).Aggregate("", (a, b) => a + b)
                                                        }
                                                        else
                                                        {
                                                            <span>??</span>
                                                        }
                                                    </div>
                                                    <div>
                                                        <div class="fw-semibold">@log.UserName</div>
                                                        <small class="text-muted">ID: @log.UserId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @GetActionClass(log.Action)">
                                                    @GetActionIcon(log.Action) @log.Action
                                                </span>
                                            </td>
                                            <td>@log.Description</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(log.Details))
                                                {
                                                    <small class="text-muted">@log.Details</small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">-</small>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
                <div class="card-footer text-center">
                    <button class="btn btn-primary" @onclick="GoToUsers">
                        <i class="fas fa-users me-2"></i>
                        Back to Users
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar-small {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #0056b3);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 11px;
    }
    
    .card {
        border: none;
        border-radius: 12px;
    }
    
    .card-header {
        border-radius: 12px 12px 0 0 !important;
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
        color: #495057;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .badge {
        font-size: 0.75em;
        padding: 6px 10px;
    }
    
    .bg-success { background-color: #28a745 !important; }
    .bg-warning { background-color: #ffc107 !important; }
    .bg-info { background-color: #17a2b8 !important; }
    .bg-danger { background-color: #dc3545 !important; }
</style>

@code {
    private IEnumerable<UserLogDto>? logs;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadLogs();
    }

    private async Task LoadLogs()
    {
        try
        {
            isLoading = true;
            logs = await LogService.GetAllLogsAsync();
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error loading logs: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task RefreshLogs()
    {
        await LoadLogs();
    }

    private void GoToUsers()
    {
        Navigation.NavigateTo("/users");
    }

    private string GetActionClass(string action)
    {
        return action.ToLower() switch
        {
            "created" => "bg-success text-white",
            "updated" => "bg-warning text-dark",
            "viewed" => "bg-info text-white",
            "deleted" => "bg-danger text-white",
            _ => "bg-secondary text-white"
        };
    }

    private string GetActionIcon(string action)
    {
        return action.ToLower() switch
        {
            "created" => "fas fa-plus",
            "updated" => "fas fa-edit",
            "viewed" => "fas fa-eye",
            "deleted" => "fas fa-trash",
            _ => "fas fa-circle"
        };
    }
}
